package pdf;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Section;
import com.kaptan.document.config.FrequentlyUsedFontStyles;
import com.kaptan.document.config.ItemPosition;
import com.kaptan.document.creator.PDFCreator;
import com.kaptan.document.creator.PdfDocumentHelper;
import com.kaptan.document.data.DocumentMetaData;
import com.kaptan.document.data.TableCellData;
import com.kaptan.document.data.TableData;
import com.kaptan.document.data.TableRowData;

public class PDFCreateTest {

	private static String userpath = System.getProperty("user.name");
	private static String FILE = "YeniTestPdf.pdf";

	public static void main(String[] args) {
		try {

			String fullPath = "C:\\Users\\" + userpath + "\\" + FILE;
			Document document = PDFCreator.createDocument(fullPath);
			document.open();
			DocumentMetaData metadata = createMetaData();
			PdfDocumentHelper.addMetaData(document, metadata);
			addTitlePage(document);
			addContent(document);

			document.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static DocumentMetaData createMetaData() {
		DocumentMetaData metadata = new DocumentMetaData();
		metadata.setAuthor("kaptan");
		metadata.setCreator("kaptan");
		Set<String> myKeySet = new HashSet<String>();
		myKeySet.add("test");
		metadata.setSearchKeywords(myKeySet);
		metadata.setSubject("PdfCreator");
		metadata.setTitle("Deneme");

		return metadata;
	}

	private static void addTitlePage(Document document) throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		PdfDocumentHelper.addEmptyLine(preface, 1);
		// Lets write a big header
		preface.add(PdfDocumentHelper.createTitle("Gümüşhane Özel Yağmur Alanı", ItemPosition.ALIGN_CENTER));

		PdfDocumentHelper.addEmptyLine(preface, 40);
		// Will create: Report generated by: _name, _date
		preface.add(PdfDocumentHelper.createParagraph(
				"Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				FrequentlyUsedFontStyles.BOLD_TEXT));
		PdfDocumentHelper.addEmptyLine(preface, 3);
		preface.add(PdfDocumentHelper.createParagraph("This document describes something which is very important ",
				FrequentlyUsedFontStyles.BOLD_TEXT));

		PdfDocumentHelper.addEmptyLine(preface, 8);

		preface.add(PdfDocumentHelper.createParagraph(
				"This document is a preliminary version and not subject to your license agreement or any other agreement.",
				FrequentlyUsedFontStyles.IMPORTANT_NOTE));

		document.add(preface);
		// Start a new page
		document.newPage();
	}

	private static void addContent(Document document) throws DocumentException {
		// Second parameter is the number of the chapter
		Chapter catPart = PdfDocumentHelper.createChapter("First Chapter", FrequentlyUsedFontStyles.TITLE, 1);

		Paragraph subPara = PdfDocumentHelper.createSubTitle("Subcategory 1");
		Section subCatPart = catPart.addSection(subPara);
		subCatPart.add(PdfDocumentHelper.createParagraph("Hello"));

		subPara = PdfDocumentHelper.createSubTitle("Subcategory 2");
		subCatPart = catPart.addSection(subPara);
		subCatPart.add(PdfDocumentHelper.createParagraph("Paragraph 1"));
		subCatPart.add(PdfDocumentHelper.createParagraph("Paragraph 2"));
		subCatPart.add(PdfDocumentHelper.createParagraph("Paragraph 3"));

		// add a list
		List pdfList = PdfDocumentHelper.createList(true, false, 10);
		ListItem item = PdfDocumentHelper.createListItem("First point");
		pdfList.add(item);
		subCatPart.add(pdfList);
		Paragraph paragraph = new Paragraph();
		PdfDocumentHelper.addEmptyLine(paragraph, 5);
		subCatPart.add(paragraph);

		// add a table
		subCatPart.add(PdfDocumentHelper.createTable(createDummyData()));

		// now add all this to the document
		document.add(catPart);

		// Second parameter is the number of the chapter
		catPart = PdfDocumentHelper.createChapter("Second Chapter", FrequentlyUsedFontStyles.SUB_TITLE, 1);
		subPara = PdfDocumentHelper.createSubTitle("Subcategory");
		subCatPart = catPart.addSection(subPara);
		subCatPart.add(PdfDocumentHelper.createParagraph("This is a very important message"));
		// now add all this to the document
		document.add(catPart);

	}

	public static TableData createDummyData() {
		TableData tableData = new TableData();

		TableRowData headerRow = new TableRowData();

		TableCellData cell1 = new TableCellData(ItemPosition.ALIGN_CENTER, "Kaptan 1",
				FrequentlyUsedFontStyles.BOLD_TEXT);
		headerRow.addCell(cell1);
		TableCellData cell2 = new TableCellData(ItemPosition.ALIGN_LEFT, "Kaptan 2",
				FrequentlyUsedFontStyles.BOLD_TEXT);
		headerRow.addCell(cell2);
		TableCellData cell3 = new TableCellData(ItemPosition.ALIGN_RIGHT, "Kaptan 3",
				FrequentlyUsedFontStyles.BOLD_TEXT);
		cell3.setBackgroundColor(BaseColor.BLUE);
		headerRow.getDataMap().put(3, cell3);
		headerRow.setHeaderRow(true);

		tableData.getTableDataMap().put(1, headerRow);

		TableRowData contentRow1 = new TableRowData();
		TableCellData c10 = new TableCellData(Element.ALIGN_RIGHT, "1.0");
		contentRow1.getDataMap().put(1, c10);
		TableCellData c20 = new TableCellData("2.0");
		contentRow1.getDataMap().put(2, c20);
		TableCellData c30 = new TableCellData("3.0");
		contentRow1.getDataMap().put(3, c30);

		TableRowData contentRow2 = new TableRowData();
		TableCellData c11 = new TableCellData("1.1");
		contentRow2.getDataMap().put(1, c11);
		TableCellData c21 = new TableCellData(Element.ALIGN_LEFT, "2.1", FrequentlyUsedFontStyles.BOLD_TEXT);

		contentRow2.getDataMap().put(2, c21);
		TableCellData c31 = new TableCellData("3.1");
		c31.setBackgroundColor(BaseColor.CYAN);

		contentRow2.getDataMap().put(3, c31);

		tableData.getTableDataMap().put(2, contentRow1);
		tableData.getTableDataMap().put(3, contentRow2);

		return tableData;
	}

}